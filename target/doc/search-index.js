var searchIndex = {};
searchIndex["written_size"] = {"doc":"This crate provides a way to calculate how much data is being written into `std::io::Write`.\nThis is mostly useful if you want to know how much space is necessary to serialize something\nwithout actually allocating that space or writing data anywhere.","items":[[3,"WrittenSize","written_size","Simple wrapper around `u64` which implements `std::io::Write`. It calculates how much data was written\ndiscarding the data itself.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"writtensize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"writtensize"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"writtensize"},{"name":"writtensize"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"writtensize"},{"name":"writtensize"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"writtensize"},{"name":"writtensize"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"writtensize"},{"name":"writtensize"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"writtensize"},{"name":"writtensize"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"writtensize"},{"name":"writtensize"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"writtensize"},{"name":"writtensize"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"writtensize"},{"name":"writtensize"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"writtensize"}],"output":{"name":"writtensize"}}],[11,"new","","Create new instance with counter initialized to zero.",0,{"inputs":[],"output":{"name":"writtensize"}}],[11,"size","","Get computed size.",0,{"inputs":[{"name":"writtensize"}],"output":{"name":"u64"}}],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"writtensize"}],"output":{"name":"result"}}],[11,"write_all","","",0,null]],"paths":[[3,"WrittenSize"]]};
initSearch(searchIndex);
